openapi: "3.0.2"
info:
    title: Bookmarker API
    version: "1.0"
servers:
    -   url: http://localhost:8080/
components:
    schemas:
        bookmark:
            type: object
            properties:
                id:
                    description: bookmark identifier
                    type: string
                url:
                    description: bookmark url
                    type: string
                title:
                    description: bookmark title
                    type: string
                tag:
                    description: optional tag for searching
                    type: string
                created_ts:
                    description: bookmarks creation time
                    type: string
                    format: date-time
            required:
                - id
                - url
                - title
    responses:
        UnauthorizedError:
            description: X-Ya-User-Ticket key is missing or invalid
    securitySchemes:
        UserTicketAuth:
            type: apiKey
            in: header
            name: X-Ya-User-Ticket
paths:
    /register:
        post:
            description: create new user
            requestBody:
                required: true
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            properties:
                                login:
                                    type: string
                                password:
                                    type: string
                            required:
                                - login
                                - password
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: string
    /login:
        post:
            description: login to system via credentials
            requestBody:
                required: true
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            properties:
                                login:
                                    type: string
                                password:
                                    type: string
                            required:
                                - login
                                - password
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: string